{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useCodeSnippet = snippetPath => {\n  _s();\n  const [codeSnippet, setCodeSnippet] = useState('');\n  useEffect(() => {\n    const loadCodeSnippet = async () => {\n      try {\n        const snippet = await import(`${snippetPath}`);\n        setCodeSnippet(snippet.default.code);\n      } catch (error) {\n        console.error('Error loading code snippet:', error);\n        setCodeSnippet('');\n      }\n    };\n    loadCodeSnippet();\n  }, [snippetPath]);\n  return codeSnippet;\n};\n_s(useCodeSnippet, \"/aOoAPbyMnEu78hpmX+uiCA2qL8=\");\nexport default useCodeSnippet;","map":{"version":3,"names":["useState","useEffect","useCodeSnippet","snippetPath","_s","codeSnippet","setCodeSnippet","loadCodeSnippet","snippet","default","code","error","console"],"sources":["/home/munish/Desktop/PRACTICE PROJECT/React-code-practices/src/hooks/useCodeSnippet.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nconst useCodeSnippet = snippetPath => {\n  const [codeSnippet, setCodeSnippet] = useState('')\n  useEffect(() => {\n    const loadCodeSnippet = async () => {\n      try {\n        const snippet = await import(`${snippetPath}`)\n        setCodeSnippet(snippet.default.code)\n      } catch (error) {\n        console.error('Error loading code snippet:', error)\n        setCodeSnippet('')\n      }\n    }\n    loadCodeSnippet()\n  }, [snippetPath]);\n\n  return codeSnippet;\n}\n\nexport default useCodeSnippet\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,cAAc,GAAGC,WAAW,IAAI;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClDC,SAAS,CAAC,MAAM;IACd,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,OAAO,GAAG,MAAM,MAAM,CAAE,GAAEL,WAAY,EAAC,CAAC;QAC9CG,cAAc,CAACE,OAAO,CAACC,OAAO,CAACC,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDL,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC;IACDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,OAAOE,WAAW;AACpB,CAAC;AAAAD,EAAA,CAhBKF,cAAc;AAkBpB,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}