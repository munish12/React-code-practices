{"ast":null,"code":"var _jsxFileName = \"/home/munish/Desktop/PRACTICE PROJECT/React-code-practices/src/pages/hooks-explained/useState.js/Usestate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport useCodeSnippet from './useCodeSnippet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Usestate = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const codeSnippet = useCodeSnippet('../UseStateCodeSnippet.js');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      size: \"lg\",\n      \"aria-label\": \"Basic example\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setCount(count + 1),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setCount(count - 1),\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: \"javascript\",\n      style: dark,\n      children: codeSnippet.trim()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Usestate, \"QqMpfBPLIJjkvdnYHKNbnMhIwog=\", false, function () {\n  return [useCodeSnippet];\n});\n_c = Usestate;\nexport default Usestate;\nvar _c;\n$RefreshReg$(_c, \"Usestate\");","map":{"version":3,"names":["React","useState","Button","ButtonGroup","Prism","SyntaxHighlighter","dark","useCodeSnippet","jsxDEV","_jsxDEV","Fragment","_Fragment","Usestate","_s","count","setCount","codeSnippet","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","language","style","trim","_c","$RefreshReg$"],"sources":["/home/munish/Desktop/PRACTICE PROJECT/React-code-practices/src/pages/hooks-explained/useState.js/Usestate.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport useCodeSnippet from './useCodeSnippet';\n\nconst Usestate = () => {\n  const [count, setCount] = useState(0);\n  const codeSnippet = useCodeSnippet('../UseStateCodeSnippet.js');\n  return (\n    <>\n      <h1>Count: {count}</h1>\n      <ButtonGroup size='lg' aria-label='Basic example'>\n        <Button onClick={() => setCount(count + 1)}>Increment</Button>\n        <Button onClick={() => setCount(count - 1)}>Decrement</Button>\n      </ButtonGroup>\n      <SyntaxHighlighter language=\"javascript\" style={dark}>\n        {codeSnippet.trim()}\n      </SyntaxHighlighter>\n    </>\n  )\n}\n\nexport default Usestate\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,WAAW,QAAQ,iBAAiB;AACrD,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,SAASC,IAAI,QAAQ,gDAAgD;AACrE,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMe,WAAW,GAAGT,cAAc,CAAC,2BAA2B,CAAC;EAC/D,oBACEE,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAI,SAAO,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBZ,OAAA,CAACN,WAAW;MAACmB,IAAI,EAAC,IAAI;MAAC,cAAW,eAAe;MAAAL,QAAA,gBAC/CR,OAAA,CAACP,MAAM;QAACqB,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAAG,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9DZ,OAAA,CAACP,MAAM;QAACqB,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAAG,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACdZ,OAAA,CAACJ,iBAAiB;MAACmB,QAAQ,EAAC,YAAY;MAACC,KAAK,EAAEnB,IAAK;MAAAW,QAAA,EAClDD,WAAW,CAACU,IAAI,CAAC;IAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACpB,CAAC;AAEP,CAAC;AAAAR,EAAA,CAfKD,QAAQ;EAAA,QAEQL,cAAc;AAAA;AAAAoB,EAAA,GAF9Bf,QAAQ;AAiBd,eAAeA,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}