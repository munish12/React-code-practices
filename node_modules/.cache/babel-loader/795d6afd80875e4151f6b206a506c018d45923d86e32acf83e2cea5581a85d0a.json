{"ast":null,"code":"// UseStateCodeSnippet.js\nexport const UseContextCodeSnippet = `\nconst UseContext = () => {\n  const user = { name: 'John Doe', email: 'john@example.com' } // Example user object\n  return (\n    <>\n      <h4>\n        The useContext hook in React is a function that allows you to consume\n        context objects in function components. It simplifies the process of\n        accessing global state and functions, making it easier to share these\n        across your application without prop drilling. When you use useContext,\n        your component will re-render whenever the context value changes.\n      </h4>\n      <DashboardContext.Provider value={user}>\n        <Dashboard />\n      </DashboardContext.Provider>\n\n      <SyntaxHighlighter language='javascript' style={dark}>\n        {UseContextCodeSnippet.trim()}\n      </SyntaxHighlighter>\n    </>\n  )\n}\n\nexport default UseContext\n\n\nContext.jsimport React, { createContext, useContext } from 'react'\nconst defaultUserValue = undefined; // or set an initial User object\n\nexport const DashboardContext = createContext(defaultUserValue);\n\nexport function useUserContext () {\n  const user = useContext(DashboardContext)\n  if (user === undefined) {\n    throw new Error('useUserContext must be use with DashboardContext')\n  }\n  return user\n}\n\nDashboard.jsximport React from 'react'\nimport { Navbar, Profile } from './components'\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <Navbar />\n      <Profile />\n    </div>\n  )\n}\n\nexport default Dashboard\n\n// Component.jsx\nimport React from 'react'\nimport { useUserContext } from './context'\n\nexport const Navbar = () => {\n  const user = useUserContext()\n  return (\n    <div>\n      <div>{user.name}</div>\n      <div>Subscription email: {user.email}</div>\n    </div>\n  )\n}\n\nexport const Profile = () => {\n  const user = useUserContext()\n  return <div>{user.name}</div>\n}\n\n\n`;","map":{"version":3,"names":["UseContextCodeSnippet"],"sources":["/home/munish/Desktop/PRACTICE PROJECT/React-code-practices/src/pages/hooks-explained/useContext/UseContextCodeSnippet.jsx"],"sourcesContent":["// UseStateCodeSnippet.js\nexport const UseContextCodeSnippet = `\nconst UseContext = () => {\n  const user = { name: 'John Doe', email: 'john@example.com' } // Example user object\n  return (\n    <>\n      <h4>\n        The useContext hook in React is a function that allows you to consume\n        context objects in function components. It simplifies the process of\n        accessing global state and functions, making it easier to share these\n        across your application without prop drilling. When you use useContext,\n        your component will re-render whenever the context value changes.\n      </h4>\n      <DashboardContext.Provider value={user}>\n        <Dashboard />\n      </DashboardContext.Provider>\n\n      <SyntaxHighlighter language='javascript' style={dark}>\n        {UseContextCodeSnippet.trim()}\n      </SyntaxHighlighter>\n    </>\n  )\n}\n\nexport default UseContext\n\n\nContext.jsimport React, { createContext, useContext } from 'react'\nconst defaultUserValue = undefined; // or set an initial User object\n\nexport const DashboardContext = createContext(defaultUserValue);\n\nexport function useUserContext () {\n  const user = useContext(DashboardContext)\n  if (user === undefined) {\n    throw new Error('useUserContext must be use with DashboardContext')\n  }\n  return user\n}\n\nDashboard.jsximport React from 'react'\nimport { Navbar, Profile } from './components'\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <Navbar />\n      <Profile />\n    </div>\n  )\n}\n\nexport default Dashboard\n\n// Component.jsx\nimport React from 'react'\nimport { useUserContext } from './context'\n\nexport const Navbar = () => {\n  const user = useUserContext()\n  return (\n    <div>\n      <div>{user.name}</div>\n      <div>Subscription email: {user.email}</div>\n    </div>\n  )\n}\n\nexport const Profile = () => {\n  const user = useUserContext()\n  return <div>{user.name}</div>\n}\n\n\n`;\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,qBAAqB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}