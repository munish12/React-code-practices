{"ast":null,"code":"// UseStateCodeSnippet.js\nexport const UseCallbackCodeSnippet = `\nimport React, { useCallback, useState } from 'react'\nimport { Button, Stack } from 'react-bootstrap'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { UseCallbackCodeSnippet } from './UseCallbackCodeSnippet'\nimport Search from './search'\nimport { shuffle } from '../../../utils/helpers'\n\nconst allUsers = ['john', 'alex', 'george', 'simon', 'james']\n\nconst UseCallback = () => {\n  const [users, setUsers] = useState(allUsers)\n\n  const handleSearch = useCallback(\n    text => {\n      console.log(users[0])\n      const FilteredUsers = allUsers.filter(user => user.includes(text))\n      setUsers(FilteredUsers)\n    },\n    [users]\n  )\n\n  return (\n    <>\n      <Stack direction='horizontal' gap={3} className='mx-auto'>\n        <div className='p-2'>\n        <Button onClick={() => setUsers(shuffle([...allUsers]))}>Shuffle</Button>\n          <Search onChange={handleSearch} />\n          <ul>\n            {users.map(user => (\n              <li key={user}>{user}</li>\n            ))}\n          </ul>\n        </div>\n        <div className='p-2'>\n          <SyntaxHighlighter language='javascript' style={dark}>\n            {UseCallbackCodeSnippet.trim()}\n          </SyntaxHighlighter>\n        </div>\n      </Stack>\n    </>\n  )\n}\n\nexport default UseCallback\n\n`;","map":{"version":3,"names":["UseCallbackCodeSnippet"],"sources":["/home/munish/Desktop/PRACTICE PROJECT/React-code-practices/src/pages/hooks-explained/useCallback/UseCallbackCodeSnippet.jsx"],"sourcesContent":["// UseStateCodeSnippet.js\nexport const UseCallbackCodeSnippet = `\nimport React, { useCallback, useState } from 'react'\nimport { Button, Stack } from 'react-bootstrap'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { UseCallbackCodeSnippet } from './UseCallbackCodeSnippet'\nimport Search from './search'\nimport { shuffle } from '../../../utils/helpers'\n\nconst allUsers = ['john', 'alex', 'george', 'simon', 'james']\n\nconst UseCallback = () => {\n  const [users, setUsers] = useState(allUsers)\n\n  const handleSearch = useCallback(\n    text => {\n      console.log(users[0])\n      const FilteredUsers = allUsers.filter(user => user.includes(text))\n      setUsers(FilteredUsers)\n    },\n    [users]\n  )\n\n  return (\n    <>\n      <Stack direction='horizontal' gap={3} className='mx-auto'>\n        <div className='p-2'>\n        <Button onClick={() => setUsers(shuffle([...allUsers]))}>Shuffle</Button>\n          <Search onChange={handleSearch} />\n          <ul>\n            {users.map(user => (\n              <li key={user}>{user}</li>\n            ))}\n          </ul>\n        </div>\n        <div className='p-2'>\n          <SyntaxHighlighter language='javascript' style={dark}>\n            {UseCallbackCodeSnippet.trim()}\n          </SyntaxHighlighter>\n        </div>\n      </Stack>\n    </>\n  )\n}\n\nexport default UseCallback\n\n`\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,sBAAsB,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}