{"ast":null,"code":"import React from'react';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{dark}from'react-syntax-highlighter/dist/esm/styles/prism';import{UseContextCodeSnippet}from'./UseContextCodeSnippet';import Dashboard from'./dashboard';import{DashboardContext}from'./context';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UseContext=function UseContext(){//  Example user object\nvar user={name:'John Doe',email:'john@example.com'};// Example user object\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"The useContext hook in React is a function that allows you to consume context objects in function components. It simplifies the process of accessing global state and functions, making it easier to share these across your application without prop drilling. When you use useContext, your component will re-render whenever the context value changes.\"}),/*#__PURE__*/_jsx(DashboardContext.Provider,{value:user,children:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(SyntaxHighlighter,{language:\"javascript\",style:dark,children:UseContextCodeSnippet.trim()})]});};export default UseContext;","map":{"version":3,"names":["React","Prism","SyntaxHighlighter","dark","UseContextCodeSnippet","Dashboard","DashboardContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","UseContext","user","name","email","children","Provider","value","language","style","trim"],"sources":["/home/munish/Desktop/PRACTICE PROJECT/React-code-practices/src/pages/hooks-explained/useContext/UseContext.jsx"],"sourcesContent":["import React from 'react'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { UseContextCodeSnippet } from './UseContextCodeSnippet'\nimport Dashboard from './dashboard'\nimport { DashboardContext } from './context'\n\nconst UseContext = () => {\n  //  Example user object\n  const user = { name: 'John Doe', email: 'john@example.com' } // Example user object\n  return (\n    <>\n      <h4>\n        The useContext hook in React is a function that allows you to consume\n        context objects in function components. It simplifies the process of\n        accessing global state and functions, making it easier to share these\n        across your application without prop drilling. When you use useContext,\n        your component will re-render whenever the context value changes.\n      </h4>\n      <DashboardContext.Provider value={user}>\n        <Dashboard />\n      </DashboardContext.Provider>\n\n      <SyntaxHighlighter language='javascript' style={dark}>\n        {UseContextCodeSnippet.trim()}\n      </SyntaxHighlighter>\n    </>\n  )\n}\n\nexport default UseContext\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,GAAI,CAAAC,iBAAiB,KAAQ,0BAA0B,CACrE,OAASC,IAAI,KAAQ,gDAAgD,CACrE,OAASC,qBAAqB,KAAQ,yBAAyB,CAC/D,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,OAASC,gBAAgB,KAAQ,WAAW,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB;AACA,GAAM,CAAAC,IAAI,CAAG,CAAEC,IAAI,CAAE,UAAU,CAAEC,KAAK,CAAE,kBAAmB,CAAC,CAAC;AAC7D,mBACEJ,KAAA,CAAAF,SAAA,EAAAO,QAAA,eACET,IAAA,OAAAS,QAAA,CAAI,4VAMJ,CAAI,CAAC,cACLT,IAAA,CAACF,gBAAgB,CAACY,QAAQ,EAACC,KAAK,CAAEL,IAAK,CAAAG,QAAA,cACrCT,IAAA,CAACH,SAAS,GAAE,CAAC,CACY,CAAC,cAE5BG,IAAA,CAACN,iBAAiB,EAACkB,QAAQ,CAAC,YAAY,CAACC,KAAK,CAAElB,IAAK,CAAAc,QAAA,CAClDb,qBAAqB,CAACkB,IAAI,CAAC,CAAC,CACZ,CAAC,EACpB,CAAC,CAEP,CAAC,CAED,cAAe,CAAAT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}